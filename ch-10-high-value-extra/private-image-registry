Step #1 - Private Image Registry - Kubernetes

1. Get one machine with ubuntu server (ip address=10.0.0.88) and install docker
	- also put entry in /etc/hosts - 10.0.0.88 imageserver.networknuts.net
	  in ALL worker nodes

2. Run registry services as a container
	docker run -d -p 5000:5000 --restart always --name registry registry:2

3. Push one image in the the registry.
	a. first download a image
		docker pull lovelearnlinux/webserver:v1
	b. change the tag
		docker image tag lovelearnlinux/webserver:v1 imageserver.networknuts.net:5000/webserver:v1 
	c. push the image
		docker push imageserver.networknuts.net:5000/webserver:v1

4. Check the images in private registry
	- curl -X GET http://10.0.0.88:5000/v2/_catalog
	- curl -X GET http://10.0.0.88:5000/v2/webserver/tags/list
   you should be able to see images and their tags

Step #2 - Check from kubernetes nodes, if they can see images inside the private registry

1. Check if images are visible
	- curl -X GET http://imageserver.networknuts.net:5000/v2/_catalog
	- curl -X GET http://imageserver.networknuts.net:5000/v2/webserver/tags/list

	this should work

2. Configure container engine to refer image registry on 10.0.0.88:5000 (imageserver.networknuts.net:5000)

	a. Append these lines in /etc/containers/registries.conf. As we are using insecure registry
		[[registry]]
		insecure = true
		location = "imageserver.networknuts.net"

	b. Modify /etc/crio/crio.conf, to look like this
		insecure_registries = ["imageserver.networknuts.net"]

		registries = [
 		   "imageserver.networknuts.net:5000"
		   # "docker.io"
		]

	systemctl daemon-reload
	systemctl restart crio

3. Test from kubernetes node by pulling image from private registry
	- crictl pull imageserver.networknuts.net:5000/webserver:v1
	
	this should pull the image on kubernetes node from private registry hosted on
	imageserver.networknust.net:5000

	- crictl images


=====
In case you want to store your registry contents at a specific location on your host filesystem, such as if you have an SSD or SAN mounted into a particular directory.

$ docker run -d -p 5000:5000 --restart=always --name registry -v /mnt/some-directory:/var/lib/registry registry:2

=====





